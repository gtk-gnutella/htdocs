<h4>21 March 2015, Version 1.1.2 Released</h4>

<p>This is mainly a bug-fixing release, addressing rare crashes that have
   been happening in production. It also contains several improvements.</p>

<p>It fixes a user-reported bug whreby it was not possible to properly
   configure the download paths using the GUI -- that led to application crashes
   due to the incomplete support for discovered threads (which GTK is using
   underneath to manage the dialog box).</p>

<p>Another bug was caused by the HTTP header parsing logic which did not
   allow "." in header names. That made it refuse to parse headers sent by some
   UPnP devices, such as "BOOTID.UPNP.ORG" or "CONFIGID.UPNP.ORG", prevening
   UPnP mappings from being installed.</p>

<p>Hapening rarely but still annoying, there was a bug on the error handling
   path of write errors to the TX network stack, leading to assertion failures
   in the <code>mq_tcp_putq()</code> routine. That was because the
   <code>qrt_compressed()</code> routine was not handling task cancellation
   properly. The likelyhood of hitting that bug when running as a leaf node was
   very low.</p>

<p>On the improvement side, the search list is now highlighting searches for
   which we have associated downloads by displaying the text in green. Further
   tweaks were made to our GTK2 code to make sure the changes are reported "real
   time" when the state changes, which was not always the case before (one
   needed to go over a search by explicitly clicking on it to update the display
   in the search list).</p>

<p>The SHA1 computation code was also further optimized to be as fast as
   possible, reducing file hashing time by two! Since SHA1 hashing happens
   regularily in gtk-gnutella to collect entropy, optimizing the SHA1
   computation affects more than just file verification.</p>

<h5>Improvements</h5>
<ul>
<li>[GTK2] Added translation URL in the "About" GUI dialog.</li>
<li>[GTK2] Highlight searches with registered downloads by using green
    text.</li>
<li>[GTK2] Added tri-state column sorting to the "upload history" panel.</li>
<li>FAQ: added new entry explaining how to get the magnet of a shared
    file.</li>
<li>Map the "collection" G2 query tag to the Windows / Linux "archive" file
    set.</li>
<li>Map the "torrent" G2 query tag to the "torrent" file set.</li>
<li>Added support for "rom", "wordprocessing" and "subtitle" G2 query media
    types.</li>
<li>Further optimized SHA1 computation, now going about twice faster for
    files.</li>

</ul>
<h5>Bug Fixes</h5>
<ul>
<li><code>page_cache_insert_pages()</code>: fixed incorrect write-lock upgrade
    logic.</li>
<li><code>pmap_insert_region()</code>: must recompute insertion index if we
    extend the pmap!</li>
<li>tmalloc: fixed thread magazine accounting in the depots.</li>
<li>Did not commit back to database after updating the DHT key request
    count.</li>
<li><code>routing_chunk_move()</code>: must check messages carefully when chunk
    was moved.</li>
<li><code>route_message()</code>: beware of <code>check_duplicate()</code> which can
    remove the node.</li>
<li><code>thread_element_matches()</code>: pay more attention to discovered
    threads.</li>
<li><code>thread_find_tid()</code>: skip thread elements not marked as being
    valid!</li>
<li><code>node_shutdown_mode()</code>: must correctly account for shutdowning G2
    nodes!</li>
<li><code>bogons_changed()</code>: forgot to close opened file descriptor</li>
<li><code>upload_stats_load_history()</code>: added missing break in switch.</li>
<li><code>qrt_compressed()</code>: was not handling QRP compression task
    cancellation properly.</li>

</ul>
<h5>Under the Hood</h5>
<ul>
<li>Added hostile ranges.</li>
<li>Updated GeoIP databases for IPv4 and IPv6.</li>
<li>Throttle the amount of PUSH messages we can send for a given remote
    server.</li>
<li>Legitimate Shareaza nodes cannot be flagging themselves as
    ultrapeers.</li>
<li>Windows: stack unwinding made safer with more memory checks to avoid
    faults.</li>
<li>UPNP: attempt rediscovery of port mapping devices every hour, if missing
    one.</li>
<li>UPNP: attempt rediscovery of port mapping devices every hour, if missing
    one.</li>
<li>Added new TSIG_OVFLOW signal sent when a thread overflows its stack.</li>
<li>Fixed race condition between concurrent <code>waiter_refcnt_dec()</code>
    calls.</li>
<li>Added logging of layer which reports a TX error in case of assert
    failure.</li>
<li>Track the last seen time (activity) of discovered threads other than
    main.</li>
<li>Prevent glade-2 from outputting support files now, since we patched
    them.</li>
<li>Added tracing of funny X-Falt lines we are seeing when demsh_debug is
    set.</li>
<li>Added tracing of funny X-Alt lines we are seeing when dmesh_debug is
    set.</li>
<li>Added tracing of funny X-Nalt lines we are seeing when dmesh_debug is
    set.</li>
<li>Added crash hook for the thread layer.</li>
<li>Added TX layer write-fault mechansim to help detect user error handling
    bugs.</li>
<li>Syntaxic adjustments to make the latest guile happy with definitions.</li>
<li>The GUI will now display current bandwidth by default, instead of the
    average.</li>
<li><code>mingw_exception()</code>: write shorter messages in case of stack
    overflows.</li>
<li><code>thread_element_reset()</code>: forgot to reset te-&gt;stack_base to
    NULL.</li>
<li><code>header_append()</code>: allow "." in header names.</li>
<li><code>thread_join_internal()</code>: no <code>thread_cancel_test_element()</code>
    on foreign thread!</li>
<li><code>thread_find_element()</code>: avoid leaving routine without unlocking
    mutex!</li>
<li><code>cond_wait_until()</code>: now correctly handle underlying cond variable
    mutation.</li>
<li><code>thread_block_timeout()</code>: don't panic if main thread already
    unblocked.</li>
<li><code>dir_entry_filename()</code>: made the Windows version thread-safe.</li>
<li><code>hfield_dump()</code>: fixed formatting of continuation lines.</li>
<li><code>dmesh_collect_locations()</code>: only parse the last timestamp when
    many given.</li>
<li><code>xmalloc_thread_free()</code>: always handle blocks in the cross-thread
    free list.</li>
<li>Hide <code>strtok_free()</code>, forcing clients to use new
    <code>strtok_free_null()</code>.</li>

</ul>
<!-- end of release 1.1.2 -->
